version: '3.7'
services:
  postgres:
    image: postgres:13-alpine
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - 'postgres:/var/lib/postgresql/data'
      - ./db/restore:/docker-entrypoint-initdb.d
  redis:
    image: redis:6.2-alpine
    volumes:
      - 'redis:/data'
  web:
    depends_on:
      - 'postgres'
      - 'redis'
    build:
      context: .
      dockerfile: Dockerfile.development
    command: bash -c "rm -rf tmp/pids/server.pid && yarn install && yarn build && bundle exec rails s -b 0.0.0.0 -p 4000"
    ports:
      - '${DOCKER_HOST_WEB_PORT:-4000}:4000'
    volumes:
      - 'bundle_cache:/bundle'
      - '.:/app'
      - .env:/app/.env
    environment:
      REDIS_URL: redis://redis:6379/0
      DB_HOST: postgres
      DB_PORT: 5432
      DISABLE_SPRING: 1
  worker:
    depends_on:
      - 'postgres'
      - 'redis'
    build:
      context: .
      dockerfile: Dockerfile.development
    command: bundle exec sidekiq -C config/sidekiq.yml
    volumes:
      - 'bundle_cache:/bundle'
      - '.:/app'
      - .env:/app/.env
    environment:
      REDIS_URL: redis://redis:6379/0
      DB_HOST: postgres
      DB_PORT: 5432
      DISABLE_SPRING: 1
  frontend:
    image: public.ecr.aws/x2b9z2t7/storedog/frontend:latest
    command: yarn run docker-build
    depends_on:
      - 'web'
    ports:
      - 3000:3000

volumes:
  redis:
  postgres:
  bundle_cache:
