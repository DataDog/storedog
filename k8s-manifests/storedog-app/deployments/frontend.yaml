apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  ports:
    - port: 3000
      targetPort: 3000
      name: http
  selector:
    app: frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
      annotations:
        ad.datadoghq.com/frontend.logs: '[{"source": "nodejs", "auto_multi_line_detection":true}]'
    spec:
      volumes:
        - name: apmsocketpath
          hostPath:
            path: /var/run/datadog/
        - name: feature-flags-config
          configMap:
            name: feature-flags-config
      initContainers:
        - name: wait-for-backend
          image: busybox
          command: ['sh', '-c', 'until nc -z backend 4000; do echo waiting for backend; sleep 2; done;']
      containers:
        - name: frontend
          image: ${REGISTRY_URL}/frontend:${SD_TAG}
          ports:
            - containerPort: 3000
          command: ["npm", "run", "dev"]
          env:
            - name: NEXT_PUBLIC_ADS_ROUTE
              valueFrom:
                configMapKeyRef:
                  name: storedog-config
                  key: NEXT_PUBLIC_ADS_ROUTE
            - name: NEXT_PUBLIC_DISCOUNTS_ROUTE
              valueFrom:
                configMapKeyRef:
                  name: storedog-config
                  key: NEXT_PUBLIC_DISCOUNTS_ROUTE
            - name: NEXT_PUBLIC_DBM_ROUTE
              valueFrom:
                configMapKeyRef:
                  name: storedog-config
                  key: NEXT_PUBLIC_DBM_ROUTE
            - name: NEXT_PUBLIC_FRONTEND_API_ROUTE
              valueFrom:
                configMapKeyRef:
                  name: storedog-config
                  key: NEXT_PUBLIC_FRONTEND_API_ROUTE
            - name: NEXT_PUBLIC_SPREE_API_HOST
              valueFrom:
                configMapKeyRef:
                  name: storedog-config
                  key: NEXT_PUBLIC_SPREE_API_HOST
            - name: NEXT_PUBLIC_SPREE_CLIENT_HOST
              valueFrom:
                configMapKeyRef:
                  name: storedog-config
                  key: NEXT_PUBLIC_SPREE_CLIENT_HOST
            - name: NEXT_PUBLIC_SPREE_IMAGE_HOST
              valueFrom:
                configMapKeyRef:
                  name: storedog-config
                  key: NEXT_PUBLIC_SPREE_IMAGE_HOST
            - name: NEXT_PUBLIC_SPREE_ALLOWED_IMAGE_DOMAIN
              valueFrom:
                configMapKeyRef:
                  name: storedog-config
                  key: NEXT_PUBLIC_SPREE_ALLOWED_IMAGE_DOMAIN
            - name: NEXT_PUBLIC_DD_APPLICATION_ID
              valueFrom:
                secretKeyRef:
                  name: datadog-secret
                  key: dd_application_id
            - name: NEXT_PUBLIC_DD_CLIENT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: datadog-secret
                  key: dd_client_token
            - name: DD_ENV
              value: ${DD_ENV}
            - name: DD_SERVICE
              value: ${NEXT_PUBLIC_DD_SERVICE_FRONTEND}
            - name: DD_VERSION
              value: ${NEXT_PUBLIC_DD_VERSION_FRONTEND}
            - name: DD_LOGS_INJECTION
              value: "true"
            - name: DD_RUNTIME_METRICS_ENABLED
              value: "true"
            - name: DD_PROFILING_ENABLED
              value: "true"
            - name: DD_PROFILING_ALLOCATION_ENABLED
              value: "true"
            - name: DD_PROFILING_TIMELINE_ENABLED
              value: "true"
            # OpenTelemetry configuration (override Dockerfile settings)
            - name: OTEL_SERVICE_NAME
              value: ${NEXT_PUBLIC_DD_SERVICE_FRONTEND}
            - name: OTEL_SERVICE_VERSION
              value: ${NEXT_PUBLIC_DD_VERSION_FRONTEND}
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "http://otelcol:4318"
            - name: OTEL_EXPORTER_OTLP_PROTOCOL
              value: "http/protobuf"
            - name: OTEL_TRACES_EXPORTER
              value: "console,otlp"
            - name: OTEL_METRICS_EXPORTER
              value: "console,otlp"
            - name: OTEL_LOGS_EXPORTER
              value: "console,otlp"
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "service.name=${NEXT_PUBLIC_DD_SERVICE_FRONTEND},service.version=${NEXT_PUBLIC_DD_VERSION_FRONTEND},deployment.environment=${DD_ENV}"
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "2Gi"
          volumeMounts:
            - name: apmsocketpath
              mountPath: /var/run/datadog
            - name: feature-flags-config
              mountPath: /app/featureFlags.config.json
              subPath: featureFlags.config.json
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 180
            periodSeconds: 20
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 120
            periodSeconds: 20
