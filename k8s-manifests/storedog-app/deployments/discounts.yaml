apiVersion: v1
kind: Service
metadata:
  name: discounts
spec:
  ports:
    - port: 2814
      targetPort: 2814
      name: http
  selector:
    app: discounts
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: discounts
spec:
  replicas: 1
  selector:
    matchLabels:
      app: discounts
  template:
    metadata:
      labels:
        app: discounts
      annotations:
        ad.datadoghq.com/discounts.logs: '[{"source": "python"}]'
    spec:
      volumes:
        - name: apmsocketpath
          hostPath:
            path: /var/run/datadog/
      initContainers:
        - name: wait-for-db
          image: busybox
          command: ['sh', '-c', 'until nc -z postgres 5432; do echo waiting for postgres; sleep 2; done;']
      containers:
        - name: discounts
          image: ${REGISTRY_URL}/discounts:${SD_TAG}
          ports:
            - containerPort: 2814
          env:
            - name: FLASK_APP
              value: "discounts.py"
            - name: DISCOUNTS_PORT
              value: "2814"
            - name: FLASK_DEBUG
              value: "0"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: storedog-secrets
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: storedog-config
                  key: POSTGRES_USER
            - name: POSTGRES_HOST
              value: postgres
            - name: DD_ENV
              value: ${DD_ENV}
            - name: DD_SERVICE
              value: store-discounts
            - name: DD_VERSION
              value: ${DD_VERSION_DISCOUNTS}
            - name: DD_LOGS_INJECTION
              value: "true"
            - name: DD_RUNTIME_METRICS_ENABLED
              value: "true"
            - name: DD_PROFILING_ENABLED
              value: "true"
            - name: DD_PROFILING_ALLOCATION_ENABLED
              value: "true"
            - name: DD_PROFILING_TIMELINE_ENABLED
              value: "true"
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          volumeMounts:
            - name: apmsocketpath
              mountPath: /var/run/datadog
          # Health probes optimized for Python Flask application
          startupProbe:
            tcpSocket:
              port: 2814
            initialDelaySeconds: 2       # Very fast Flask startup with DB ready
            periodSeconds: 1
            timeoutSeconds: 1
            failureThreshold: 6          # 2s + (6 Ã— 1s) = 8s max startup
            successThreshold: 1
          readinessProbe:
            tcpSocket:
              port: 2814
            initialDelaySeconds: 0       # Startup probe handles delay
            periodSeconds: 1             # Ultra-fast for microservice
            timeoutSeconds: 1
            failureThreshold: 2
            successThreshold: 1
          livenessProbe:
            tcpSocket:
              port: 2814
            initialDelaySeconds: 0       # Startup probe handles delay
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3