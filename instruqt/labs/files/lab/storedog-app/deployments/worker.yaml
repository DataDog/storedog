apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker
spec:
  replicas: 1                                  # User reverted to 1
  selector:
    matchLabels:
      app: worker
  template:
    metadata:
      labels:
        app: worker
      annotations:
        ad.datadoghq.com/worker.logs: '[{"source": "ruby", "auto_multi_line_detection":true}]'
    spec:
      volumes:
        - name: apmsocketpath
          hostPath:
            path: /var/run/datadog/
      initContainers:
        - name: wait-for-db
          image: busybox
          command: ['sh', '-c', 'until nc -z postgres 5432; do echo waiting for postgres; sleep 2; done;']
      containers:
        - name: worker
          image: ${REGISTRY_URL}/backend:${SD_TAG}
          command: ["bundle", "exec", "sidekiq", "-C", "config/sidekiq.yml"]
          env:
            - name: WORKER
              value: "true"
            - name: REDIS_URL
              valueFrom:
                configMapKeyRef:
                  name: storedog-config
                  key: REDIS_URL
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: storedog-config
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: storedog-config
                  key: DB_PORT
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: storedog-config
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: storedog-secrets
                  key: POSTGRES_PASSWORD
            - name: DB_POOL
              value: "15"                      # Optimized for worker processes
            - name: MAX_THREADS
              valueFrom:
                configMapKeyRef:
                  name: storedog-config
                  key: MAX_THREADS
            - name: DD_ENV
              value: ${DD_ENV}
            - name: DD_SERVICE
              value: store-worker
            - name: DD_VERSION
              value: ${DD_VERSION_BACKEND}
            - name: DD_LOGS_INJECTION
              value: "true"
            - name: DD_RUNTIME_METRICS_ENABLED
              value: "true"
            - name: DD_PROFILING_ENABLED
              value: "true"
            - name: DD_PROFILING_ALLOCATION_ENABLED
              value: "true"
            - name: DD_PROFILING_TIMELINE_ENABLED
              value: "true"
          resources:
            requests:
              cpu: "100m"
              memory: "384Mi"
            limits:
              cpu: "300m"    
              memory: "512Mi"
          volumeMounts:
            - name: apmsocketpath
              mountPath: /var/run/datadog
          # Health probes for Sidekiq worker monitoring
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - "ps aux | grep '[s]idekiq' | grep -v grep"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - "ps aux | grep '[s]idekiq' | grep -v grep"
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 5
          startupProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - "ps aux | grep '[s]idekiq' | grep -v grep"
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 10
