apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  ports:
    - port: 4000
      targetPort: 4000
      name: http
  selector:
    app: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    tags.datadoghq.com/env: ${DD_ENV}
    tags.datadoghq.com/service: store-backend
    tags.datadoghq.com/version: ${DD_VERSION_BACKEND}
spec:
  replicas: 1                                  # Increased from 1 for better load distribution
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
      annotations:
        ad.datadoghq.com/backend.logs: '[{"source": "ruby", "auto_multi_line_detection":true}]'
    spec:
      volumes:
        - name: apmsocketpath
          hostPath:
            path: /var/run/datadog/
      initContainers:
        - name: wait-for-db
          image: busybox
          command: ['sh', '-c', 'until nc -z postgres 5432; do echo waiting for postgres; sleep 2; done;']
      containers:
        - name: backend
          image: ${REGISTRY_URL}/backend:${SD_TAG}
          ports:
            - containerPort: 4000
          env:
            - name: REDIS_URL
              valueFrom:
                configMapKeyRef:
                  name: storedog-config
                  key: REDIS_URL
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: storedog-config
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: storedog-config
                  key: DB_PORT
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: storedog-config
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: storedog-secrets
                  key: POSTGRES_PASSWORD
            - name: RAILS_ENV
              valueFrom:
                configMapKeyRef:
                  name: storedog-config
                  key: RAILS_ENV
            - name: DB_POOL
              value: "25"                      # Increased from configmap for better connection pooling
            - name: MAX_THREADS
              valueFrom:
                configMapKeyRef:
                  name: storedog-config
                  key: MAX_THREADS
            # Redis Caching Configuration
            - name: RAILS_CACHE_STORE
              valueFrom:
                configMapKeyRef:
                  name: storedog-config
                  key: RAILS_CACHE_STORE
            - name: CACHE_REDIS_URL
              valueFrom:
                configMapKeyRef:
                  name: storedog-config
                  key: CACHE_REDIS_URL
            - name: SESSION_STORE
              valueFrom:
                configMapKeyRef:
                  name: storedog-config
                  key: SESSION_STORE
            - name: SESSION_REDIS_URL
              valueFrom:
                configMapKeyRef:
                  name: storedog-config
                  key: SESSION_REDIS_URL
            - name: RAILS_CACHE_FRAGMENT
              valueFrom:
                configMapKeyRef:
                  name: storedog-config
                  key: RAILS_CACHE_FRAGMENT
            - name: CACHE_DEFAULT_EXPIRES_IN
              valueFrom:
                configMapKeyRef:
                  name: storedog-config
                  key: CACHE_DEFAULT_EXPIRES_IN
            - name: RAILS_CACHE_QUERIES
              valueFrom:
                configMapKeyRef:
                  name: storedog-config
                  key: RAILS_CACHE_QUERIES
            - name: CACHE_REDIS_POOL_SIZE
              valueFrom:
                configMapKeyRef:
                  name: storedog-config
                  key: CACHE_REDIS_POOL_SIZE
            - name: RAILS_CACHE_COMPRESSION
              valueFrom:
                configMapKeyRef:
                  name: storedog-config
                  key: RAILS_CACHE_COMPRESSION
            - name: DD_ENV
              value: ${DD_ENV}
            - name: DD_SERVICE
              value: store-backend
            - name: DD_VERSION
              value: ${DD_VERSION_BACKEND}
            - name: DD_LOGS_INJECTION
              value: "true"
            - name: DD_RUNTIME_METRICS_ENABLED
              value: "true"
            - name: DD_PROFILING_ENABLED
              value: "true"
            - name: DD_PROFILING_ALLOCATION_ENABLED
              value: "true"
            - name: DD_PROFILING_TIMELINE_ENABLED
              value: "true"
          resources:
            requests:
              cpu: 100m
              memory: 768Mi
            limits:
              cpu: 500m
              memory: 1Gi                      # Reduced from 2Gi
          volumeMounts:
            - name: apmsocketpath
              mountPath: /var/run/datadog
          # Health probes for automatic monitoring and recovery
          readinessProbe:
            tcpSocket:
              port: 4000
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          livenessProbe:
            tcpSocket:
              port: 4000
            initialDelaySeconds: 20
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 5
          startupProbe:
            tcpSocket:
              port: 4000
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 12
